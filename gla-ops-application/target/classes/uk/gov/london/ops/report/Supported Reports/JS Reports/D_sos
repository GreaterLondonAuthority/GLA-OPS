select distinct  pj.id Project_ID,  case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end as "SoS approved date",  case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then cast(lega_sos as date) else cast(sos_date as date) end as "SoS approved date without format",  case when cast(substring((case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end),4,2) as int) in ('1','2','3') then  text(cast(right((case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end),4) as int)-1)||'-'||text(cast(right((case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end),4) as int)) else  text(cast(right((case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end),4) as int))||'-'||text(cast(right((case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end),4) as int)+1) end as "SoS approved financial year",    (coalesce(r3.units1,0)+ coalesce(r2.units5,0) + coalesce(r1.units9,0))  as "Total units London Affordable Rent at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then   (coalesce(r3.units2,0)+ coalesce(r2.units6,0) + coalesce(r1.units10,0)) else 0 end as "Total units London Living Rent at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units3,0)+ coalesce(r2.units7,0) + coalesce(r1.units11,0)) else 0 end as "Total units London Shared Ownership at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units4,0)+ coalesce(r2.units8,0) + coalesce(r1.units12,0)) else 0 end as "Total units Other Affordable at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units41,0)+ coalesce(r2.units81,0) + coalesce(r1.units121,0)) else 0 end as "Total Legacy Affordable Rent at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units42,0)+ coalesce(r2.units82,0) + coalesce(r1.units122,0)) else 0 end as "Total Legacy Affordable Home Ownership at SoS",    case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units43,0)+ coalesce(r2.units83,0) + coalesce(r1.units123,0)) else 0 end as "Total Legacy Shared Ownership at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units44,0)+ coalesce(r2.units84,0) + coalesce(r1.units124,0)) else 0 end as "Total Social Rent at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units45,0)+ coalesce(r2.units85,0) + coalesce(r1.units125,0)) else 0 end as "Total LAR Social Rent at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units46,0)+ coalesce(r2.units86,0) + coalesce(r1.units126,0)) else 0 end as "Total LLR Shared Ownership at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units47,0)+ coalesce(r2.units87,0) + coalesce(r1.units127,0)) else 0 end as "Total Intermediate Rent at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units48,0)+ coalesce(r2.units88,0) + coalesce(r1.units128,0)) else 0 end as "Total Intermediate Home Ownership at SoS",   coalesce(case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then q1.answer else null end,'') as "Other Affordable unit type at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then  (coalesce(r3.units0,0)+ coalesce(r2.units0,0) + coalesce(r1.units0,0) ) else 0 end as "Total Start on Site unit achieved",    case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then coalesce(s_grant.auth_amount,0) + coalesce(i_grant.auth_amount,0) else 0 end as "Grant paid at SoS", case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then coalesce(s_rcgf.auth_amount,0) + coalesce(i_rcgf.auth_amount,0)  else 0 end as "RCGF Paid at SoS", case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then coalesce(s_dpf.auth_amount,0) + coalesce(i_dpf.auth_amount,0) else 0 end as "DPF Paid at SoS",  case when (case when pj.programme_id in ('1010','1011','1012','1013','1014','1015') then to_char(lega_sos,'DD/MM/YYYY') else to_char(sos_date,'DD/MM/YYYY') end) is not null then coalesce(s_grant.auth_amount,0)+coalesce(s_rcgf.auth_amount,0)+coalesce(s_dpf.auth_amount,0) else 0 end  as "Total SOS GLA funding payment"  from project pj inner join project_block pb on pj.id = pb.project_id and pb.reporting_version ='true'    left join ( select * from ( select distinct  pb.project_id, tb.sos_milestone_authorised lega_sos, tb.completion_milestone_authorised lega_com     from tenure_block tb inner join project_block pb on tb.id =pb.id where pb.reporting_version ='true'  and (sos_milestone_authorised is not null or completion_milestone_authorised is not null ) ) a  )lega on pj.id = lega.project_id    left join ( select * from ( select distinct  pb.project_id,  mi.claim_status,mi.summary sos, min(cast(pb.last_modified as date)) sos_date from project_block pb inner join milestone mi on pb.id = mi.milestones_block where mi.summary in ('Start on site','Start on Site') and mi.claim_status = 'Approved' and pb.block_status in ('APPROVED','LAST_APPROVED')  group by pb.project_id,  mi.claim_status , mi.summary ) a  )sos on pj.id = sos.project_id    left join ( select * from ( select distinct  pb.project_id, max(pb.last_modified) modified  from project_block pb inner join tenure_and_units ten on pb.id = ten.block_id    left join ( select * from ( select distinct  pb.project_id,  mi.claim_status, min(pb.last_modified) sos_date     from project_block pb inner join milestone mi on pb.id = mi.milestones_block where mi.summary in ('Start on site','Start on Site') and mi.claim_status = 'Approved'  and pb.block_status in ('APPROVED','LAST_APPROVED')  group by pb.project_id,  mi.claim_status ) a  )sos on pb.project_id = sos.project_id  where pb.block_type = 'CALCULATE' and pb.last_modified <= sos.sos_date group by pb.project_id  ) a  )sos_mod1 on pj.id = sos_mod1.project_id     left join (   select * from ( select distinct  pb.project_id, pb.last_modified mod , sum(coalesce(ten.total_units_at_sos,0)) units0,     sum(case when ty.external_id ='4000' then coalesce(ten.total_units_at_sos,0) else 0 end) units1,  sum(case when ty.external_id ='4001' then coalesce(ten.total_units_at_sos,0) else 0 end) units2,  sum(case when ty.external_id ='4002' then coalesce(ten.total_units_at_sos,0) else 0 end) units3,  sum(case when ty.external_id ='4003' then coalesce(ten.total_units_at_sos,0) else 0 end) units4, sum(case when ty.external_id ='4004' then coalesce(ten.total_units_at_sos,0) else 0 end) units41,  sum(case when ty.external_id ='4005' then coalesce(ten.total_units_at_sos,0) else 0 end) units42, sum(case when ty.external_id ='4006' then coalesce(ten.total_units_at_sos,0) else 0 end) units43,  sum(case when ty.external_id ='4009' then coalesce(ten.total_units_at_sos,0) else 0 end) units44, sum(case when ty.external_id ='4010' then coalesce(ten.total_units_at_sos,0) else 0 end) units45,  sum(case when ty.external_id ='4011' then coalesce(ten.total_units_at_sos,0) else 0 end) units46, sum(case when ty.external_id ='4012' then coalesce(ten.total_units_at_sos,0) else 0 end) units47, sum(case when ty.external_id ='4015' then coalesce(ten.total_units_at_sos,0) else 0 end) units48           from project_block pb inner join project pj on pb.project_id = pj.id inner join tenure_and_units ten on pb.id = ten.block_id  inner join  template_tenure_type ty on ten.tenure_type_id = ty.id where  pb.block_type = 'CALCULATE' group by pb.project_id, pb.last_modified   ) a  )r3 on pj.id = r3.project_id and sos_mod1.modified = r3.mod     left join ( select * from ( select distinct  pb.project_id, max(pb.last_modified) mod   from project_block pb inner join tenure_and_units ten on pb.id = ten.block_id    left join ( select * from ( select distinct  pb.project_id,  mi.claim_status, min(pb.last_modified) sos_date     from project_block pb inner join milestone mi on pb.id = mi.milestones_block where mi.summary in ('Start on site','Start on Site') and mi.claim_status = 'Approved'  and pb.block_status in ('APPROVED','LAST_APPROVED')  group by pb.project_id,  mi.claim_status ) a  )sos on pb.project_id = sos.project_id  where pb.block_type = 'NEGOTIATED' and pb.last_modified <= sos.sos_date group by pb.project_id  ) a  )sos_mod2 on pj.id = sos_mod2.project_id     left join (   select * from ( select distinct  pb.project_id, pb.last_modified mod,  sum(coalesce(ten.total_units_at_sos,0)) units0, sum(case when ty.external_id ='4000' then coalesce(ten.total_units_at_sos,0)  else 0 end) units5,  sum(case when ty.external_id ='4001' then coalesce(ten.total_units_at_sos,0)  else 0 end) units6,  sum(case when ty.external_id ='4002' then coalesce(ten.total_units_at_sos,0)  else 0 end) units7,  sum(case when ty.external_id ='4003' then coalesce(ten.total_units_at_sos,0)  else 0 end) units8, sum(case when ty.external_id ='4004' then coalesce(ten.total_units_at_sos,0)  else 0 end) units81,  sum(case when ty.external_id ='4005' then coalesce(ten.total_units_at_sos,0)  else 0 end) units82, sum(case when ty.external_id ='4006' then coalesce(ten.total_units_at_sos,0)  else 0 end) units83,  sum(case when ty.external_id ='4009' then coalesce(ten.total_units_at_sos,0)  else 0 end) units84, sum(case when ty.external_id ='4010' then coalesce(ten.total_units_at_sos,0)  else 0 end) units85,  sum(case when ty.external_id ='4011' then coalesce(ten.total_units_at_sos,0)  else 0 end) units86, sum(case when ty.external_id ='4012' then coalesce(ten.total_units_at_sos,0)  else 0 end) units87, sum(case when ty.external_id ='4015' then coalesce(ten.total_units_at_sos,0)  else 0 end) units88      from project_block pb inner join project pj on pb.project_id = pj.id and pj.total_grant_eligibility is not null inner join tenure_and_units ten on pb.id = ten.block_id  inner join  template_tenure_type ty on ten.tenure_type_id = ty.id where pb.block_type = 'NEGOTIATED' group by pb.project_id, pb.last_modified ) a  )r2 on pj.id = r2.project_id and r2.mod = sos_mod2.mod     left join ( select * from ( select distinct  pb.project_id, max(pb.last_modified) mod   from project_block pb inner join tenure_and_units ten on pb.id = ten.block_id    left join ( select * from ( select distinct  pb.project_id,  mi.claim_status, min(pb.last_modified) sos_date     from project_block pb inner join milestone mi on pb.id = mi.milestones_block where mi.summary in ('Start on site','Start on Site') and mi.claim_status = 'Approved'  and pb.block_status in ('APPROVED','LAST_APPROVED')  group by pb.project_id,  mi.claim_status ) a  )sos on pb.project_id = sos.project_id  where pb.block_type = 'DEVELOPER-LED' and pb.last_modified <= sos.sos_date group by pb.project_id  ) a  )sos_mod3 on pj.id = sos_mod3.project_id     left join (   select * from ( select distinct  pb.project_id, pb.last_modified mod,  sum(coalesce(ten.total_units_at_sos,0)) units0,   sum(case when ty.external_id ='4000' then coalesce(ten.total_units_at_sos,0)  else 0 end) units9,  sum(case when ty.external_id ='4001' then coalesce(ten.total_units_at_sos,0)  else 0 end) units10,  sum(case when ty.external_id ='4002' then coalesce(ten.total_units_at_sos,0)  else 0 end) units11,  sum(case when ty.external_id ='4003' then coalesce(ten.total_units_at_sos,0)  else 0 end) units12, sum(case when ty.external_id ='4004' then coalesce(ten.total_units_at_sos,0)  else 0 end) units121,  sum(case when ty.external_id ='4005' then coalesce(ten.total_units_at_sos,0)  else 0 end) units122, sum(case when ty.external_id ='4006' then coalesce(ten.total_units_at_sos,0)  else 0 end) units123,  sum(case when ty.external_id ='4009' then coalesce(ten.total_units_at_sos,0)  else 0 end) units124, sum(case when ty.external_id ='4010' then coalesce(ten.total_units_at_sos,0)  else 0 end) units125,  sum(case when ty.external_id ='4011' then coalesce(ten.total_units_at_sos,0)  else 0 end) units126, sum(case when ty.external_id ='4012' then coalesce(ten.total_units_at_sos,0)  else 0 end) units127, sum(case when ty.external_id ='4015' then coalesce(ten.total_units_at_sos,0)  else 0 end) units128      from project_block pb inner join project pj on pb.project_id = pj.id inner join tenure_and_units ten on pb.id = ten.block_id  inner join  template_tenure_type ty on ten.tenure_type_id = ty.id where pb.block_type = 'DEVELOPER-LED' group by pb.project_id, pb.last_modified ) a  )r1 on pj.id = r1.project_id and sos_mod3.mod = r1.mod     left join ( select * from ( select distinct  pb.project_id, max(pb.last_modified) mod   from project_block pb left join answer an on pb.id = an.questions_block inner join question q on an.question_id = q.id and q.id ='501'     inner join ( select * from ( select distinct  pb.project_id,  mi.claim_status, min(pb.last_modified) sos_date     from project_block pb inner join milestone mi on pb.id = mi.milestones_block where mi.summary in ('Start on site','Start on Site') and mi.claim_status = 'Approved'  and pb.block_status in ('APPROVED','LAST_APPROVED')  group by pb.project_id,  mi.claim_status ) a  )sos on pb.project_id = sos.project_id where pb.last_modified <= sos.sos_date group by pb.project_id  ) a  )q_mod1 on pj.id = q_mod1.project_id   left join ( 	 select * from ( select distinct  pj.id project_id, pb.last_modified mod, an.question_id, q.text, an.answer from project pj  left join project_block pb on pj.id = pb.project_id   left join answer an on pb.id = an.questions_block inner join question q on an.question_id = q.id and q.id ='501'  ) a where a.answer is not null ) q1 on pj.id = q1.project_id and q1.mod = q_mod1.mod    left join ( 	 select * from ( select distinct  pl.project_id , pl.amount*-1 auth_amount, to_char(pl.authorised_on,'DD/MM/YYYY') auth_date  from project_ledger_entry pl inner join project pj on pl.project_id = pj.id inner join project_block pb on pj.id = pb.project_id  where  pl.ledger_type = 'PAYMENT' and pl.sub_category in ('Start on site','Start on Site') and pl.authorised_on is not null  ) a  ) s_grant on pj.id = s_grant.project_id  left join ( 	 select * from ( select distinct  pl.project_id , pl.amount*-1 auth_amount, to_char(pl.authorised_on,'DD/MM/YYYY') auth_date  from project_ledger_entry pl inner join project pj on pl.project_id = pj.id inner join project_block pb on pj.id = pb.project_id  where  pl.ledger_type = 'RCGF' and pl.sub_category in ('Start on site','Start on Site') and pl.authorised_on is not null  ) a  ) s_rcgf on pj.id = s_rcgf.project_id   left join ( 	 select * from ( select distinct  pl.project_id , pl.amount*-1 auth_amount, to_char(pl.authorised_on,'DD/MM/YYYY') auth_date  from project_ledger_entry pl inner join project pj on pl.project_id = pj.id inner join project_block pb on pj.id = pb.project_id  where  pl.ledger_type = 'DPF' and pl.sub_category in ('Start on site','Start on Site') and pl.authorised_on is not null  ) a  ) s_dpf on pj.id = s_dpf.project_id   left join ( 	 select * from ( select distinct  pl.project_id , pl.amount*-1 auth_amount, to_char(pl.authorised_on,'DD/MM/YYYY') auth_date  from project_ledger_entry pl inner join project pj on pl.project_id = pj.id inner join project_block pb on pj.id = pb.project_id  where  pl.ledger_type = 'PAYMENT' and pl.sub_category ='Interim payment' and pl.authorised_on is not null  ) a  ) i_grant on pj.id = i_grant.project_id   left join ( 	 select * from ( select distinct  pl.project_id , pl.amount*-1 auth_amount, to_char(pl.authorised_on,'DD/MM/YYYY') auth_date  from project_ledger_entry pl inner join project pj on pl.project_id = pj.id inner join project_block pb on pj.id = pb.project_id  where  pl.ledger_type = 'RCGF' and pl.sub_category ='Interim payment' and pl.authorised_on is not null  ) a  ) i_rcgf on pj.id = i_rcgf.project_id   left join ( 	 select * from ( select distinct  pl.project_id , pl.amount*-1 auth_amount, to_char(pl.authorised_on,'DD/MM/YYYY') auth_date  from project_ledger_entry pl inner join project pj on pl.project_id = pj.id inner join project_block pb on pj.id = pb.project_id  where pl.ledger_type = 'DPF' and pl.sub_category ='Interim payment' and pl.authorised_on is not null  ) a  ) i_dpf on pj.id = i_dpf.project_id